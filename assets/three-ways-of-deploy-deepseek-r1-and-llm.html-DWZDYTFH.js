import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as l}from"./app-Q4Ay_VEF.js";const t={};function n(p,i){return l(),a("div",null,i[0]||(i[0]=[e(`<p>由于 DeepSeek-R1 爆火，导致 DeepSeek 官网用起来非常卡（至 2025 年 2 月 2 日），因此催生除了很多本地部署的需求。而这里我选用了三种最常用的部署方式，从普通人测试使用到工业界部署，让你一次性掌握大模型的部署方式。</p><h2 id="对比总结" tabindex="-1"><a class="header-anchor" href="#对比总结"><span>对比总结</span></a></h2><table><thead><tr><th>特性</th><th>Ollama</th><th>LM Studio</th><th>vLLM</th></tr></thead><tbody><tr><td><strong>定位</strong></td><td>本地快速体验</td><td>图形化交互工具</td><td>生产级推理引擎</td></tr><tr><td><strong>用户群体</strong></td><td>开发者/爱好者</td><td>非技术用户</td><td>企业/工程师</td></tr><tr><td><strong>部署复杂度</strong></td><td>低</td><td>极低</td><td>中高</td></tr><tr><td><strong>性能优化</strong></td><td>基础</td><td>一般</td><td>极致</td></tr><tr><td><strong>适用场景</strong></td><td>开发测试、原型验证</td><td>个人使用、教育演示</td><td>高并发生产环境</td></tr><tr><td><strong>扩展性</strong></td><td>有限</td><td>无</td><td>强（分布式/云原生）</td></tr></tbody></table><ul><li>建议 <ul><li>想快速体验模型：<strong>Ollama</strong></li><li>需要图形界面和隐私保护：<strong>LM Studio</strong></li><li>企业级高并发需求：<strong>vLLM</strong></li></ul></li></ul><h2 id="方式1-ollama" tabindex="-1"><a class="header-anchor" href="#方式1-ollama"><span>方式1： ollama</span></a></h2><p>Ollama 是一个开源的本地化大模型部署工具，旨在简化大型语言模型（LLM）的安装、运行和管理。它支持多种模型架构，并提供与 <strong>OpenAI 兼容的 API 接口</strong>，适合开发者和企业快速搭建私有化 AI 服务。</p><ul><li>官网 <ul><li>https://ollama.com/</li></ul></li><li>开源链接 <ul><li>https://github.com/ollama/ollama</li></ul></li></ul><p>Ollama 的<strong>特点</strong>：</p><ul><li><strong>轻量化部署</strong>：完全的本地化部署。</li><li><strong>多模型支持</strong>：兼容各种开源模型，包括 qwen、deepseek、LLaMA 等。</li><li><strong>跨平台支持</strong>：支持主流的 Windows、Mac、Linux。</li></ul><p>使用 Ollama 安装 DeepSeek-R1 等大模型一共就三个步骤。</p><ul><li>步骤 1：下载 ollama <ul><li>windows 和 mac 进入 https://ollama.com/download 下载对应的安装包，然后安装即可</li><li>Linux 的话使用如下命令安装 <ul><li><code>curl -fsSL https://ollama.com/install.sh | sh</code></li></ul></li></ul></li></ul><p><img src="https://cfcdn.bruceyuan.com/blog/2025/DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250202210452603.webp" alt="DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250202210452603" loading="lazy"></p><ul><li>步骤 2：启动 ollama （一般都默认启动了，点击运行或者命令行启动） <ul><li>如果是 mac 和 windows 中，点击启动即可；</li><li>如果是 linux 中，理论上上方的脚本会自动启动 ollama，但是如果发生意外，可以使用 <ul><li><code>ollama serve</code> 进行启动；</li></ul></li></ul></li><li>步骤 3：运行对应的模型 <ul><li>运行 deepseek-r1 模型，这里选用的是 deepseek-r1 的蒸馏小模型，<code>deepseek-r1:1.5b</code><ul><li><code>ollama run deepseek-r1:1.5b</code></li></ul></li><li>如果使用其他模型则是 <ul><li><code>ollama run {model_name}</code></li><li><code>{model_name}</code> 替换成真实的模型名字，名字可以在 https://ollama.com/search 中获取。</li></ul></li><li>注意⚠️：这样启动模型具有对应的上下文，本质上是启动了 chat 的接口。</li><li>具体效果如下：可以看到模型具有 <code>think</code> 的能力，但是由于模型比较小，效果依然不是特别好。</li></ul></li></ul><p><img src="https://cfcdn.bruceyuan.com/blog/2025/DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250202213103381.webp" alt="DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250202213103381" loading="lazy"></p><blockquote><p>从上面也可以看出，比较适合本地快速测试大模型。</p></blockquote><h2 id="方式2-lm-studio" tabindex="-1"><a class="header-anchor" href="#方式2-lm-studio"><span>方式2：LM Studio</span></a></h2><p>LM Studio 是一款桌面应用程序，用于在您的计算机上开发和试验 LLMs。</p><p>LM Studio 的<strong>特点</strong>：</p><ul><li><p>运行本地 LLMs 的桌面应用程序</p></li><li><p>熟悉的聊天界面</p></li><li><p>搜索和下载功能（通过 Hugging Face 🤗）</p></li><li><p>可以侦听类似 OpenAI 端点的本地服务器</p></li><li><p>用于管理本地模型和配置的系统</p></li><li><p>LM Studio 是一个可视化的软件（ https://lm-studio.cn ），基本上没有任何的学习成本。具体操作界面如下：</p></li></ul><p><img src="https://cfcdn.bruceyuan.com/blog/2025/DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250202215154305.webp" alt="DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250202215154305" loading="lazy"></p><ul><li>模型下载和运行的步骤如下</li></ul><p><img src="https://cfcdn.bruceyuan.com/blog/2025/DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250202214613708.webp" alt="DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250202214613708" loading="lazy"></p><p>因此 LM Studio 最适合普通人使用，没有任何的使用成本，全部都是可视化操作。比如适合个人学习、内容创作、教育演示。以及需要隐私保护的本地对话场景。</p><h2 id="方式-3-vllm" tabindex="-1"><a class="header-anchor" href="#方式-3-vllm"><span>方式 3：vLLM</span></a></h2><p>vLLM 是加州大学伯克利分校开发的高性能大模型推理框架，<strong>专为生产环境优化</strong>，支持分布式部署和极低延迟的模型服务，<strong>适合企业级应用</strong>。这也是在业界用的最多的推理框架之一，如果你需要稳定的、优化性能更强的、社区服务支持更好的，那么 vLLM 一定是不二的候选。</p><p>vLLM 的<strong>特点</strong></p><ul><li><strong>极致性能</strong>：通过各种算法优化，显著提升吞吐量。</li><li><strong>生产级功能</strong>：动态批处理（Continuous Batching）、分布式推理、多 GPU 并行。</li><li><strong>模型兼容性</strong>：支持 HuggingFace Transformers 模型架构（如 Llama、deepseek等）。</li><li><strong>开放生态</strong>：与 OpenAI API 兼容，可无缝替换商业模型。</li></ul><p>通过 vllm 对外提供一个服务，这样你就可以一次部署，在多个不同的地方使用，比如家里、公司内、甚至在星巴克内；当然也可以把这个服务提供给其他人。</p><p>通过 <code>pip install vllm</code> <a href="https://docs.vllm.ai/en/latest/getting_started/quickstart.html" target="_blank" rel="noopener noreferrer">安装</a>之后，一般有两种形式使用。</p><h3 id="方式1-提供-openai-的api接口的-server" tabindex="-1"><a class="header-anchor" href="#方式1-提供-openai-的api接口的-server"><span>方式1：提供 openai 的API接口的 server</span></a></h3><p>下面我用 <a href="https://aistackdc.com" target="_blank" rel="noopener noreferrer">AIStackDC</a> 平台演示（当然也可以本地使用），这是一个云服务器平台，最大的特点就是便宜好用，如果用我的邀请链接：<a href="https://aistackdc.com/phone-register?invite_code=D872A9" target="_blank" rel="noopener noreferrer">https://aistackdc.com/phone-register?invite_code=D872A9</a>，可以额外获得 1张 1 折（5 小时）和几张5 折（36小时）优惠券。</p><h4 id="服务器启动" tabindex="-1"><a class="header-anchor" href="#服务器启动"><span>服务器启动</span></a></h4><ul><li>首先在容器管理中，点击<strong>创建实例</strong>，选择 4090 和 PyTorch 2.30 以及 python 3.12 对应的镜像。</li></ul><p><img src="https://cfcdn.bruceyuan.com/blog/2025/DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250203122902695.webp" alt="DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250203122902695" loading="lazy"></p><ul><li><p>进入 jupyter lab （similar to jupyter notebook) <img src="https://cfcdn.bruceyuan.com/blog/2025/DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250203123030296.webp" alt="DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250203123030296" loading="lazy"></p></li><li><p>然后选择一个 terminal 进入命令行，安装对应的 vllm</p><ul><li><code>pip install vllm</code></li><li>如果执行失败可以使用阿里云的镜像 <ul><li><code>pip install vllm --index-url https://mirrors.aliyun.com/pypi/simple/</code></li></ul></li></ul></li><li><p>安装完毕之后，启动 vllm 服务，下面以 deepseek r1 的蒸馏模型为例</p><ul><li><code>HF_ENDPOINT=https://hf-mirror.com vllm serve deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B</code></li><li>其中 HF_ENDPOINT 是为了设置代理，为了在国内下载更快。</li><li>后面的<code>vllm serve deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B</code> 才是真正的启动命令。</li></ul></li></ul><h4 id="服务器中使用" tabindex="-1"><a class="header-anchor" href="#服务器中使用"><span>服务器中使用</span></a></h4><p>具体参考 https://docs.vllm.ai/en/latest/getting_started/quickstart.html#openai-compatible-server</p><ul><li>方式 1：使用 curl 使用 genererate 接口</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://localhost:8000/v1/completions</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Content-Type: application/json&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;model&quot;: &quot;Qwen/Qwen2.5-1.5B-Instruct&quot;,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;prompt&quot;: &quot;San Francisco is a&quot;,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;max_tokens&quot;: 7,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;temperature&quot;: 0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    }&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>方式 2： 代码实现</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> openai </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> OpenAI</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Set OpenAI&#39;s API key and API base to use vLLM&#39;s API server.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">openai_api_key </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;EMPTY&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">openai_api_base </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;http://localhost:8000/v1&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">client </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> OpenAI</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    api_key</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">openai_api_key,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    base_url</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">openai_api_base,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">chat_response </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> client.chat.completions.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    model</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Qwen/Qwen2.5-1.5B-Instruct&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    messages</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;role&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;system&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;content&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;You are a helpful assistant.&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;role&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;user&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;content&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Tell me a joke.&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Chat response:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, chat_response)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="本地电脑-mac-windows-中使用" tabindex="-1"><a class="header-anchor" href="#本地电脑-mac-windows-中使用"><span>本地电脑（mac/windows）中使用</span></a></h4><p>由于 <a href="https://aistackdc.com" target="_blank" rel="noopener noreferrer">AIStackDC</a> 平台有对应的 IP，我们是可以 ssh 登录的，具体看<a href="https://aistackdc.com/help/instanceserviceportssh#ssh" target="_blank" rel="noopener noreferrer">https://aistackdc.com/help/instanceserviceportssh</a>，</p><p>在本地电脑执行 <code>ssh -i &lt;SSH私钥文件路径&gt; -CNg -L &lt;本地监听端口&gt;:127.0.0.1:&lt;容器内服务监听端口&gt; root@221.178.84.158 -p &lt;实例SSH连接端口&gt;</code></p><ul><li>SSH私钥文件路径：本地存放SSH私钥文件的路径</li><li>容器内服务监听端口：容器实例中启动的服务监听的端口</li><li>本地监听端口：本地监听的转发端口（即后续想要在本地浏览器中访问容器实例中服务的访问端口，该端口自定义，确保本地系统中该端口未被占用即可）</li><li>实例SSH连接端口：SSH连接容器实例使用的端口</li></ul><p>举例：<code>ssh -i id_rsa -CNg -L 9000:127.0.0.1:8000 root@221.178.85.21 -p 34538</code></p><p><img src="https://cfcdn.bruceyuan.com/blog/2025/DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250203124957011.webp" alt="DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250203124957011" loading="lazy"></p><p>执行完之后，就可以在本地使用了，同时也可以通过 <code>localhost:9000</code> 配置到 <a href="https://github.com/open-webui/open-webui" target="_blank" rel="noopener noreferrer">open-webui</a>等聊天界面中，这样可以实现</p><p><img src="https://cfcdn.bruceyuan.com/blog/2025/DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250203124819972.webp" alt="DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250203124819972" loading="lazy"></p><h3 id="方式-2-批量离线推理" tabindex="-1"><a class="header-anchor" href="#方式-2-批量离线推理"><span>方式 2：批量离线推理</span></a></h3><p>还有一种是使用 python api 在代码内部 load，然后做各种定制化的开发，但是如果你采用这种方式，那么说明你不是本教程的受众，你应该自己有足够的能力完成模型的部署和开发。</p><ul><li>Example.</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> vllm </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> LLM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, SamplingParams</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Sample prompts.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">prompts </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;Hello, my name is&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;The president of the United States is&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;The capital of France is&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;The future of AI is&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Create a sampling params object.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">sampling_params </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> SamplingParams</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">temperature</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">top_p</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.95</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Create an LLM.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">llm </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> LLM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">model</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;facebook/opt-125m&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Generate texts from the prompts. The output is a list of RequestOutput objects</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># that contain the prompt, generated text, and other information.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">outputs </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> llm.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">generate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(prompts, sampling_params)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Print the outputs.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> output </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> outputs:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    prompt </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> output.prompt</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    generated_text </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> output.outputs[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">].text</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Prompt: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">prompt</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">!r</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">, Generated text: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">generated_text</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">!r</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="交个朋友🤣" tabindex="-1"><a class="header-anchor" href="#交个朋友🤣"><span>交个朋友🤣</span></a></h2><p>最后欢迎关注我，基本全网同名 <a href="https://yuanchaofa.com/" target="_blank" rel="noopener noreferrer">chaofa用代码打点酱油</a></p><ul><li>公众号： <img src="https://yuanchaofa.com/llms-zero-to-hero/chaofa-wechat-official-account.png" alt="chaofa用代码打点酱油" loading="lazy"></li><li><a href="https://space.bilibili.com/12420432" target="_blank" rel="noopener noreferrer">B站-chaofa用代码打点酱油</a></li><li><a href="https://www.youtube.com/@bbruceyuan" target="_blank" rel="noopener noreferrer">YouTube-chaofa用代码打点酱油</a></li><li><a href="https://chaofa.notion.site/11a569b3ecce49b2826d679f5e2fdb54" target="_blank" rel="noopener noreferrer">chaofa 的 notion 简介</a></li></ul>`,56)]))}const k=s(t,[["render",n],["__file","three-ways-of-deploy-deepseek-r1-and-llm.html.vue"]]),d=JSON.parse('{"path":"/post/three-ways-of-deploy-deepseek-r1-and-llm.html","title":"DeepSeek-R1大模型本地部署的三种方式，总有一种适合你","lang":"zh-CN","frontmatter":{"title":"DeepSeek-R1大模型本地部署的三种方式，总有一种适合你","date":"2025-02-03T18:06:20.000Z","tag":["LLM","transformer"],"description":"三种不同的方式部署大模型（deepseek r1），分别是 ollama, LM Studio 和 vllm，从个人测试部署到工业产品使用，让你一次性掌握大模型的不同部署方式。","publish":true,"permalink":"/post/three-ways-of-deploy-deepseek-r1-and-llm.html","head":[["meta",{"property":"og:url","content":"https://yuanchaofa.com/post/three-ways-of-deploy-deepseek-r1-and-llm.html"}],["meta",{"property":"og:site_name","content":"chaofa用代码打点酱油"}],["meta",{"property":"og:title","content":"DeepSeek-R1大模型本地部署的三种方式，总有一种适合你"}],["meta",{"property":"og:description","content":"三种不同的方式部署大模型（deepseek r1），分别是 ollama, LM Studio 和 vllm，从个人测试部署到工业产品使用，让你一次性掌握大模型的不同部署方式。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cfcdn.bruceyuan.com/blog/2025/DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250202210452603.webp"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-21T06:46:04.000Z"}],["meta",{"property":"article:tag","content":"LLM"}],["meta",{"property":"article:tag","content":"transformer"}],["meta",{"property":"article:published_time","content":"2025-02-03T18:06:20.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-21T06:46:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"DeepSeek-R1大模型本地部署的三种方式，总有一种适合你\\",\\"image\\":[\\"https://cfcdn.bruceyuan.com/blog/2025/DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250202210452603.webp\\",\\"https://cfcdn.bruceyuan.com/blog/2025/DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250202213103381.webp\\",\\"https://cfcdn.bruceyuan.com/blog/2025/DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250202215154305.webp\\",\\"https://cfcdn.bruceyuan.com/blog/2025/DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250202214613708.webp\\",\\"https://cfcdn.bruceyuan.com/blog/2025/DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250203122902695.webp\\",\\"https://cfcdn.bruceyuan.com/blog/2025/DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250203123030296.webp\\",\\"https://cfcdn.bruceyuan.com/blog/2025/DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250203124957011.webp\\",\\"https://cfcdn.bruceyuan.com/blog/2025/DeepSeek-R1大模型本地部署的三种方式，总有一种适合你-20250203124819972.webp\\",\\"https://yuanchaofa.com/llms-zero-to-hero/chaofa-wechat-official-account.png\\"],\\"datePublished\\":\\"2025-02-03T18:06:20.000Z\\",\\"dateModified\\":\\"2025-06-21T06:46:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Chaofa Yuan\\",\\"url\\":\\"https://yuanchaofa.com\\"}]}"]]},"headers":[{"level":2,"title":"对比总结","slug":"对比总结","link":"#对比总结","children":[]},{"level":2,"title":"方式1： ollama","slug":"方式1-ollama","link":"#方式1-ollama","children":[]},{"level":2,"title":"方式2：LM Studio","slug":"方式2-lm-studio","link":"#方式2-lm-studio","children":[]},{"level":2,"title":"方式 3：vLLM","slug":"方式-3-vllm","link":"#方式-3-vllm","children":[{"level":3,"title":"方式1：提供 openai 的API接口的 server","slug":"方式1-提供-openai-的api接口的-server","link":"#方式1-提供-openai-的api接口的-server","children":[{"level":4,"title":"服务器启动","slug":"服务器启动","link":"#服务器启动","children":[]},{"level":4,"title":"服务器中使用","slug":"服务器中使用","link":"#服务器中使用","children":[]},{"level":4,"title":"本地电脑（mac/windows）中使用","slug":"本地电脑-mac-windows-中使用","link":"#本地电脑-mac-windows-中使用","children":[]}]},{"level":3,"title":"方式 2：批量离线推理","slug":"方式-2-批量离线推理","link":"#方式-2-批量离线推理","children":[]}]},{"level":2,"title":"交个朋友🤣","slug":"交个朋友🤣","link":"#交个朋友🤣","children":[]}],"git":{"createdTime":1738577784000,"updatedTime":1750488364000,"contributors":[{"name":"Chaofa Yuan","email":"bruceyuan123@gmail.com","commits":2}]},"readingTime":{"minutes":8.26,"words":2477},"filePathRelative":"post/大模型/three-ways-of-deploy-deepseek-r1-and-llm.md","localizedDate":"2025年2月3日"}');export{k as comp,d as data};
